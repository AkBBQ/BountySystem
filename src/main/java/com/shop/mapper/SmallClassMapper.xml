<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.mapper.SmallClassMapper">


  <resultMap id="getMap" type="com.shop.model.SmallClass">
    <id column="id"  property="id" />
    <result column="name" property="name" />
     <result column="lid" property="lid" />
    <association property="largeClass"  javaType="com.shop.model.LargeClass">
		    <id property="id"  column="id"/>
		    <result property="name"  column="lname"/>
		</association> 
    
  </resultMap>
  
  <select id="queryAll" resultMap="getMap">
      select s.id,s.name,s.lid,l.name,l.id,l.name lname from small_class s
      inner join large_class l on s.lid=l.id
      
       </select>
       
         <select id="querySmallname" parameterType="String" resultMap="getMap">
      select s.id,s.name,l.name lname from small_class s
      inner join large_class l on s.lid=l.id
      where l.name=#{name}
       </select>
       
       
       <select id="queryById" parameterType="Integer" resultType="com.shop.model.SmallClass">
       select * from small_class where id=#{id}
       </select>
       
       <insert id="add" parameterType="com.shop.model.SmallClass">
       insert into small_class(lid,name) values(#{lid},#{name})
       </insert>
       
       <delete id="del" parameterType="Integer">
       delete from small_class where id=#{id}
       </delete>
       
       <update id="update" parameterType="com.shop.model.SmallClass">
          update small_class set  name=#{name} ,lid=#{lid} where id=#{id}
       </update>
</mapper>